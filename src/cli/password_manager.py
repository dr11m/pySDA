#!/usr/bin/env python3
"""
–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–∞—Ä–æ–ª–µ–π –¥–ª—è CLI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
"""

from typing import Optional, Dict, Any
from .constants import Messages
from .display_formatter import DisplayFormatter
from src.utils.logger_setup import print_and_log


class PasswordManager:
    """–ú–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–∞—Ä–æ–ª—è–º–∏ Steam –∞–∫–∫–∞—É–Ω—Ç–æ–≤"""
    
    def __init__(self):
        self.formatter = DisplayFormatter()
    
    def change_password(self, account_context) -> bool:
        """
        –°–º–µ–Ω–∞ –ø–∞—Ä–æ–ª—è Steam –∞–∫–∫–∞—É–Ω—Ç–∞
        
        Args:
            account_context: –ö–æ–Ω—Ç–µ–∫—Å—Ç –∞–∫–∫–∞—É–Ω—Ç–∞
            
        Returns:
            bool: True –µ—Å–ª–∏ –ø–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω
        """
        try:
            print_and_log(self.formatter.format_section_header("üîí –°–º–µ–Ω–∞ –ø–∞—Ä–æ–ª—è"))
            print_and_log("‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –°–º–µ–Ω–∞ –ø–∞—Ä–æ–ª—è –º–æ–∂–µ—Ç –∑–∞—Ç—Ä–æ–Ω—É—Ç—å —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞!")
            print_and_log("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ email –∏ –º–æ–±–∏–ª—å–Ω–æ–º—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é")
            print_and_log("")
            
            # –ó–∞–≥–ª—É—à–∫–∞ - —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞
            print_and_log(Messages.PASSWORD_CHANGE_NOT_IMPLEMENTED)
            print_and_log("üí° –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤ –±—É–¥—É—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö")
            print_and_log("")
            print_and_log("–ü–ª–∞–Ω–∏—Ä—É–µ–º–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å:")
            print_and_log("  ‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ –ø–∞—Ä–æ–ª—è")
            print_and_log("  ‚Ä¢ –í–≤–æ–¥ –Ω–æ–≤–æ–≥–æ –ø–∞—Ä–æ–ª—è")
            print_and_log("  ‚Ä¢ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Steam Guard")
            print_and_log("  ‚Ä¢ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
            print_and_log("  ‚Ä¢ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–∞—Ä–æ–ª—è")
            
            input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
            return True
            
        except Exception as e:
            print_and_log(f"‚ùå –û—à–∏–±–∫–∞ —Å–º–µ–Ω—ã –ø–∞—Ä–æ–ª—è: {e}", "ERROR")
            input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
            return False
    
    def validate_password_strength(self, password: str) -> Dict[str, Any]:
        """
        –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏ –ø–∞—Ä–æ–ª—è
        
        Args:
            password: –ü–∞—Ä–æ–ª—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
            
        Returns:
            Dict —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏
        """
        result = {
            'is_valid': True,
            'score': 0,
            'issues': []
        }
        
        # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞
        if len(password) < 8:
            result['issues'].append("–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 8 —Å–∏–º–≤–æ–ª–æ–≤")
            result['is_valid'] = False
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –±—É–∫–≤
        if not any(c.isalpha() for c in password):
            result['issues'].append("–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –±—É–∫–≤—ã")
            result['is_valid'] = False
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ü–∏—Ñ—Ä
        if not any(c.isdigit() for c in password):
            result['issues'].append("–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ü–∏—Ñ—Ä—ã")
            result['is_valid'] = False
        
        # –ü–æ–¥—Å—á–µ—Ç –æ—á–∫–æ–≤ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
        if len(password) >= 12:
            result['score'] += 2
        elif len(password) >= 8:
            result['score'] += 1
            
        if any(c.isupper() for c in password):
            result['score'] += 1
            
        if any(c.islower() for c in password):
            result['score'] += 1
            
        if any(c in "!@#$%^&*()_+-=[]{}|;:,.<>?" for c in password):
            result['score'] += 2
            
        return result 