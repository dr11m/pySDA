#!/usr/bin/env python3
"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è —Ç—Ä–µ–π–¥–æ–≤
"""

from typing import Dict, List, Optional, Any
from .constants import Messages, Formatting
from .display_formatter import DisplayFormatter


class TradeActionHandler:
    """–ë–∞–∑–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–µ–π—Å—Ç–≤–∏–π —Å —Ç—Ä–µ–π–¥–∞–º–∏"""
    
    def __init__(self, trade_manager, display_formatter: DisplayFormatter, cookie_checker=None):
        self.trade_manager = trade_manager
        self.formatter = display_formatter
        self.cookie_checker = cookie_checker
    
    def _print_section_header(self, title: str):
        """–í—ã–≤–µ—Å—Ç–∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏"""
        print(f"\n{title}")
        print(Formatting.SHORT_LINE)
    
    def _print_stats(self, stats: Dict[str, int], title: str = "–†–µ–∑—É–ª—å—Ç–∞—Ç"):
        """–í—ã–≤–µ—Å—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"""
        stats_display = self.formatter.format_stats(stats, title)
        print(stats_display)


class GiftAcceptHandler(TradeActionHandler):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–∏–Ω—è—Ç–∏—è –ø–æ–¥–∞—Ä–∫–æ–≤"""
    
    def execute(self) -> Dict[str, int]:
        """–ü—Ä–∏–Ω—è—Ç—å –≤—Å–µ –ø–æ–¥–∞—Ä–∫–∏"""
        try:
            self._print_section_header("üéÅ –ü—Ä–∏–Ω—è—Ç–∏–µ –ø–æ–¥–∞—Ä–∫–æ–≤...")
            
            # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º cookies –ø–µ—Ä–µ–¥ –¥–µ–π—Å—Ç–≤–∏–µ–º
            if self.cookie_checker and not self.cookie_checker.ensure_valid_cookies():
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ cookies")
                return {'errors': 1}
            
            stats = self.trade_manager.process_free_trades(
                auto_accept=True,
                auto_confirm=False  # –°–Ω–∞—á–∞–ª–∞ —Ç–æ–ª—å–∫–æ –ø—Ä–∏–Ω–∏–º–∞–µ–º
            )
            
            self._print_stats(stats)
            return stats
            
        except Exception as e:
            print(self.formatter.format_error("–û—à–∏–±–∫–∞ –ø—Ä–∏–Ω—è—Ç–∏—è –ø–æ–¥–∞—Ä–∫–æ–≤", e))
            return {'errors': 1}


class TradeConfirmHandler(TradeActionHandler):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ç—Ä–µ–π–¥–æ–≤ —á–µ—Ä–µ–∑ Guard"""
    
    def execute(self) -> Dict[str, int]:
        """–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≤—Å–µ —Ç—Ä–µ–π–¥—ã —á–µ—Ä–µ–∑ Guard"""
        try:
            self._print_section_header("üîë –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ç—Ä–µ–π–¥–æ–≤ —á–µ—Ä–µ–∑ Guard...")
            
            # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º cookies –ø–µ—Ä–µ–¥ –¥–µ–π—Å—Ç–≤–∏–µ–º
            if self.cookie_checker and not self.cookie_checker.ensure_valid_cookies():
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ cookies")
                return {'errors': 1}
            
            stats = self.trade_manager.process_confirmation_needed_trades(
                auto_confirm=True
            )
            
            self._print_stats(stats)
            return stats
            
        except Exception as e:
            print(self.formatter.format_error("–û—à–∏–±–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ç—Ä–µ–π–¥–æ–≤", e))
            return {'errors': 1}


class SpecificTradeHandler(TradeActionHandler):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–µ–π—Å—Ç–≤–∏–π —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ —Ç—Ä–µ–π–¥–∞–º–∏"""
    
    def __init__(self, trade_manager, display_formatter: DisplayFormatter, trades_cache: List, cookie_checker=None):
        super().__init__(trade_manager, display_formatter, cookie_checker)
        self.trades_cache = trades_cache
    
    def display_trades_list(self):
        """–û—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç—Ä–µ–π–¥–æ–≤"""
        trades_display = self.formatter.format_trades_list(self.trades_cache)
        print(trades_display)
    
    def get_trade_number(self) -> Optional[int]:
        """–ü–æ–ª—É—á–∏—Ç—å –Ω–æ–º–µ—Ä —Ç—Ä–µ–π–¥–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        if not self.trades_cache:
            print("‚ùå –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö —Ç—Ä–µ–π–¥–æ–≤")
            return None
        
        self.display_trades_list()
        
        try:
            trade_num = int(input(f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç—Ä–µ–π–¥–∞ (1-{len(self.trades_cache)}): "))
            if 1 <= trade_num <= len(self.trades_cache):
                return trade_num
            else:
                print(f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä —Ç—Ä–µ–π–¥–∞. –î–æ—Å—Ç—É–ø–Ω–æ: 1-{len(self.trades_cache)}")
                return None
        except ValueError:
            print("‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä")
            return None
    
    def accept_specific_trade(self, trade_number: int) -> bool:
        """–ü—Ä–∏–Ω—è—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ç—Ä–µ–π–¥"""
        try:
            # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º cookies –ø–µ—Ä–µ–¥ –¥–µ–π—Å—Ç–≤–∏–µ–º
            if self.cookie_checker and not self.cookie_checker.ensure_valid_cookies():
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ cookies")
                return False
            
            trade = self.trades_cache[trade_number - 1]
            trade_id = trade.tradeofferid
            
            print(f"\n‚úÖ –ü—Ä–∏–Ω—è—Ç–∏–µ —Ç—Ä–µ–π–¥–∞ #{trade_number} (ID: {trade_id})...")
            print(Formatting.SHORT_LINE)
            
            # –®–∞–≥ 1: –ü—Ä–∏–Ω–∏–º–∞–µ–º —Ç—Ä–µ–π–¥ –≤ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
            print("üåê –ü—Ä–∏–Ω–∏–º–∞–µ–º —Ç—Ä–µ–π–¥ –≤ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ...")
            if self.trade_manager.accept_trade_offer(trade_id):
                print(f"‚úÖ –¢—Ä–µ–π–¥ {trade_id} —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç –≤ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ")
                
                # –®–∞–≥ 2: –°–ø—Ä–∞—à–∏–≤–∞–µ–º –æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ —á–µ—Ä–µ–∑ Guard
                from .constants import Messages
                confirm = input(f"\n{Messages.CONFIRM_GUARD}").lower().strip()
                if confirm in ['y', 'yes', '–¥–∞', '–¥']:
                    print("üîë –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Guard...")
                    if self.trade_manager.confirm_accepted_trade_offer(trade_id):
                        print("‚úÖ –¢—Ä–µ–π–¥ —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω —á–µ—Ä–µ–∑ Guard")
                    else:
                        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Ç—Ä–µ–π–¥ —á–µ—Ä–µ–∑ Guard")
                else:
                    print("‚ÑπÔ∏è –¢—Ä–µ–π–¥ –ø—Ä–∏–Ω—è—Ç –≤ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ, –Ω–æ –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω —á–µ—Ä–µ–∑ Guard")
                
                return True
            else:
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–Ω—è—Ç—å —Ç—Ä–µ–π–¥ {trade_id} –≤ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ")
                return False
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–Ω—è—Ç–∏—è —Ç—Ä–µ–π–¥–∞: {e}")
            return False
    
    def confirm_specific_trade(self, trade_number: int) -> bool:
        """–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ç—Ä–µ–π–¥ —á–µ—Ä–µ–∑ Guard"""
        try:
            # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º cookies –ø–µ—Ä–µ–¥ –¥–µ–π—Å—Ç–≤–∏–µ–º
            if self.cookie_checker and not self.cookie_checker.ensure_valid_cookies():
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ cookies")
                return False
            
            trade = self.trades_cache[trade_number - 1]
            trade_id = trade.tradeofferid
            
            print(f"\nüîë –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ç—Ä–µ–π–¥–∞ #{trade_number} —á–µ—Ä–µ–∑ Guard (ID: {trade_id})...")
            print(Formatting.SHORT_LINE)
            
            if self.trade_manager.confirm_accepted_trade_offer(trade_id):
                print(f"‚úÖ –¢—Ä–µ–π–¥ {trade_id} —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω —á–µ—Ä–µ–∑ Guard")
                return True
            else:
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Ç—Ä–µ–π–¥ {trade_id} —á–µ—Ä–µ–∑ Guard")
                return False
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ç—Ä–µ–π–¥–∞: {e}")
            return False


class TradeCheckHandler(TradeActionHandler):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç—Ä–µ–π–¥–æ–≤"""
    
    def has_any_unfinished_trades(self) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –ª—é–±—ã—Ö –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö —Ç—Ä–µ–π–¥–æ–≤"""
        try:
            trade_offers = self.trade_manager.get_trade_offers(active_only=False)
            if not trade_offers:
                return False
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —Ç–∏–ø—ã –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö —Ç—Ä–µ–π–¥–æ–≤
            unfinished_trades = []
            unfinished_trades.extend(trade_offers.active_received)
            unfinished_trades.extend(trade_offers.active_sent)
            unfinished_trades.extend(trade_offers.confirmation_needed_received)
            unfinished_trades.extend(trade_offers.confirmation_needed_sent)
            
            return len(unfinished_trades) > 0
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö —Ç—Ä–µ–π–¥–æ–≤: {e}")
            return False
    
    def has_guard_confirmation_needed_trades(self) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ç—Ä–µ–π–¥–æ–≤, —Ç—Ä–µ–±—É—é—â–∏—Ö Guard –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è"""
        try:
            trade_offers = self.trade_manager.get_trade_offers(active_only=False)
            if not trade_offers:
                return False
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–µ–π–¥—ã, —Ç—Ä–µ–±—É—é—â–∏–µ Guard –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
            guard_needed_trades = []
            guard_needed_trades.extend(trade_offers.confirmation_needed_received)
            guard_needed_trades.extend(trade_offers.confirmation_needed_sent)
            
            return len(guard_needed_trades) > 0
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç—Ä–µ–π–¥–æ–≤ –¥–ª—è Guard: {e}")
            return False 