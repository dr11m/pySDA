#!/usr/bin/env python3
"""
Cookie Checker - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ cookies
"""

from typing import Optional, Callable, Any
import logging
from .constants import Messages
from .display_formatter import DisplayFormatter

logger = logging.getLogger(__name__)


class CookieChecker:
    """–ü—Ä–æ–≤–µ—Ä—â–∏–∫ cookies –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏"""
    
    def __init__(self, cookie_manager, formatter: DisplayFormatter):
        self.cookie_manager = cookie_manager
        self.formatter = formatter
    
    def ensure_valid_cookies(self, max_age_minutes: int = 120, show_info: bool = True) -> bool:
        """
        –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ cookies –∞–∫—Ç—É–∞–ª—å–Ω—ã, –æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
        
        Args:
            max_age_minutes: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç cookies –≤ –º–∏–Ω—É—Ç–∞—Ö
            show_info: –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ü–µ—Å—Å–µ
            
        Returns:
            bool: True –µ—Å–ª–∏ cookies –∞–∫—Ç—É–∞–ª—å–Ω—ã –∏–ª–∏ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã
        """
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å cookies
            if self.cookie_manager.is_cookies_valid(max_age_minutes):
                if show_info:
                    logger.info("‚úÖ Cookies –∞–∫—Ç—É–∞–ª—å–Ω—ã")
                return True
            
            # Cookies –Ω–µ–∞–∫—Ç—É–∞–ª—å–Ω—ã, –æ–±–Ω–æ–≤–ª—è–µ–º
            if show_info:
                print("üîÑ Cookies —É—Å—Ç–∞—Ä–µ–ª–∏, –æ–±–Ω–æ–≤–ª—è–µ–º...")
            
            cookies = self.cookie_manager.update_cookies()
            
            if cookies:
                if show_info:
                    print("‚úÖ Cookies —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã")
                return True
            else:
                if show_info:
                    print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å cookies")
                return False
                
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ cookies: {e}")
            if show_info:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ cookies: {e}")
            return False
    
    def with_valid_cookies(self, action: Callable[[], Any], max_age_minutes: int = 120, show_info: bool = True) -> Any:
        """
        –í—ã–ø–æ–ª–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ —Å –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π cookies
        
        Args:
            action: –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
            max_age_minutes: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç cookies
            show_info: –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ü–µ—Å—Å–µ
            
        Returns:
            –†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è action –∏–ª–∏ None –ø—Ä–∏ –æ—à–∏–±–∫–µ
        """
        if not self.ensure_valid_cookies(max_age_minutes, show_info):
            return None
        
        try:
            return action()
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è: {e}")
            if show_info:
                print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è: {e}")
            return None


def requires_cookies(max_age_minutes: int = 120, show_info: bool = True):
    """
    –î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –º–µ—Ç–æ–¥–æ–≤, —Ç—Ä–µ–±—É—é—â–∏—Ö –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö cookies
    
    Args:
        max_age_minutes: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç cookies
        show_info: –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ü–µ—Å—Å–µ
    """
    def decorator(func):
        def wrapper(self, *args, **kwargs):
            # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —É –æ–±—ä–µ–∫—Ç–∞ –µ—Å—Ç—å cookie_checker
            if hasattr(self, 'cookie_checker'):
                checker = self.cookie_checker
            elif hasattr(self, 'cookie_manager') and hasattr(self, 'formatter'):
                # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π checker
                checker = CookieChecker(self.cookie_manager, self.formatter)
            else:
                logger.error("‚ùå –û–±—ä–µ–∫—Ç –Ω–µ –∏–º–µ–µ—Ç cookie_checker –∏–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∞—Ç—Ä–∏–±—É—Ç–æ–≤")
                return None
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º cookies –ø–µ—Ä–µ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º
            if not checker.ensure_valid_cookies(max_age_minutes, show_info):
                return None
            
            # –í—ã–ø–æ–ª–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
            return func(self, *args, **kwargs)
        
        return wrapper
    return decorator 