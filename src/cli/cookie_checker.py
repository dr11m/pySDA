#!/usr/bin/env python3
"""
Cookie Checker - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ cookies
"""

from typing import Optional, Callable, Any
from .display_formatter import DisplayFormatter
from src.utils.logger_setup import logger
from src.cookie_manager import CookieManager
from src.utils.logger_setup import print_and_log
from .config_manager import global_config

class CookieChecker:
    """–ü—Ä–æ–≤–µ—Ä—â–∏–∫ cookies –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏"""
    
    def __init__(self, cookie_manager, formatter: DisplayFormatter):
        self.cookie_manager: CookieManager = cookie_manager
        self.formatter: DisplayFormatter = formatter
    
    def ensure_valid_cookies(self, max_age_minutes: int = None) -> bool:
        """
        –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ cookies –∞–∫—Ç—É–∞–ª—å–Ω—ã, –æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
        
        Args:
            max_age_minutes: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç cookies –≤ –º–∏–Ω—É—Ç–∞—Ö (–µ—Å–ª–∏ None, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞)
            
        Returns:
            bool: True –µ—Å–ª–∏ cookies –∞–∫—Ç—É–∞–ª—å–Ω—ã –∏–ª–∏ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã
        """
        try:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞, –µ—Å–ª–∏ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–æ —è–≤–Ω–æ
            if max_age_minutes is None:
                max_age_minutes = global_config.get_max_cookie_age_minutes()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å cookies
            if self.cookie_manager.is_cookies_valid(max_age_minutes):
                print_and_log("‚úÖ Cookies –∞–∫—Ç—É–∞–ª—å–Ω—ã")
                return True
            
            # Cookies –Ω–µ–∞–∫—Ç—É–∞–ª—å–Ω—ã, –æ–±–Ω–æ–≤–ª—è–µ–º
            print_and_log("üîÑ Cookies —É—Å—Ç–∞—Ä–µ–ª–∏, –æ–±–Ω–æ–≤–ª—è–µ–º...")
            
            cookies = self.cookie_manager.update_cookies()
            
            if cookies:
                print_and_log("‚úÖ Cookies —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã")
                return True
            else:
                print_and_log("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å cookies")
                return False
                
        except Exception as e:
            print_and_log(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ cookies: {e}")
            return False
    


def requires_cookies(max_age_minutes: int = None, show_info: bool = True):
    """
    –î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –º–µ—Ç–æ–¥–æ–≤, —Ç—Ä–µ–±—É—é—â–∏—Ö –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö cookies
    
    Args:
        max_age_minutes: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç cookies (–µ—Å–ª–∏ None, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞)
        show_info: –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ü–µ—Å—Å–µ
    """
    def decorator(func):
        def wrapper(self, *args, **kwargs):
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞, –µ—Å–ª–∏ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–æ —è–≤–Ω–æ
            actual_max_age = max_age_minutes if max_age_minutes is not None else global_config.get_max_cookie_age_minutes()
            
            # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —É –æ–±—ä–µ–∫—Ç–∞ –µ—Å—Ç—å cookie_checker
            if hasattr(self, 'cookie_checker'):
                checker = self.cookie_checker
            elif hasattr(self, 'cookie_manager') and hasattr(self, 'formatter'):
                # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π checker
                checker = CookieChecker(self.cookie_manager, self.formatter)
            else:
                logger.error("‚ùå –û–±—ä–µ–∫—Ç –Ω–µ –∏–º–µ–µ—Ç cookie_checker –∏–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∞—Ç—Ä–∏–±—É—Ç–æ–≤")
                return None
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º cookies –ø–µ—Ä–µ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º
            if not checker.ensure_valid_cookies(actual_max_age):
                return None
            
            # –í—ã–ø–æ–ª–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
            return func(self, *args, **kwargs)
        
        return wrapper
    return decorator 