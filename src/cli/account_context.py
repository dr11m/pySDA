#!/usr/bin/env python3
"""
–ö–æ–Ω—Ç–µ–∫—Å—Ç –ê–∫–∫–∞—É–Ω—Ç–∞ –∏ –§–∞–±—Ä–∏–∫–∞ –¥–ª—è –µ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è.
"""

from dataclasses import dataclass
from typing import Optional

from src.cookie_manager import CookieManager, initialize_cookie_manager
from src.trade_confirmation_manager import TradeConfirmationManager
from src.cli.cookie_checker import CookieChecker
from src.cli.config_manager import ConfigManager
from src.cli.display_formatter import DisplayFormatter
from src.factories import create_instance_from_config
from src.utils.logger_setup import logger

@dataclass
class AccountContext:
    """
    –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –æ–¥–Ω–∏–º –∞–∫–∫–∞—É–Ω—Ç–æ–º.
    """
    account_name: str
    username: str
    cookie_manager: CookieManager
    trade_manager: TradeConfirmationManager
    cookie_checker: CookieChecker
    accounts_dir: str
    config_manager: ConfigManager

def build_account_context(config_manager: ConfigManager, account_name: str) -> Optional[AccountContext]:
    """
    –§–∞–±—Ä–∏–∫–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ —Ä–∞–±–æ—á–µ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–ª—è –æ–¥–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞.
    –ò–Ω–∫–∞–ø—Å—É–ª–∏—Ä—É–µ—Ç –ª–æ–≥–∏–∫—É, –∫–æ—Ç–æ—Ä–∞—è —Ä–∞–Ω—å—à–µ –±—ã–ª–∞ –≤ SteamBotCLI.initialize_for_account.
    """
    try:
        logger.info(f"üõ†Ô∏è  –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–∞: {account_name}")
        
        # –í—ã–±–∏—Ä–∞–µ–º –∞–∫–∫–∞—É–Ω—Ç –∏ –≤–∞–ª–∏–¥–∏—Ä—É–µ–º –µ–≥–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        if not config_manager.select_account(account_name):
            logger.error(f"–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–∞ '{account_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
            return None
        if not config_manager.validate_config():
            logger.error(f"–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è '{account_name}' –Ω–µ –ø—Ä–æ—à–ª–∞ –≤–∞–ª–∏–¥–∞—Ü–∏—é.")
            return None

        logger.info(f"–ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–∞ {account_name}...")
        username = config_manager.get('username')
        password = config_manager.get('password')
        mafile_path = config_manager.get('mafile_path')
        steam_id = config_manager.get('steam_id')
        api_key = config_manager.get('api_key')  # –ü–æ–ª—É—á–∞–µ–º API –∫–ª—é—á –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
        accounts_dir = config_manager.get('accounts_dir', 'accounts_info')
        
        logger.info(f"–û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: username={username}, mafile_path={mafile_path}, steam_id={steam_id}")
        
        # –ü–æ–ª—É—á–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞ –∏ –ø–µ—Ä–µ–≤–æ–¥–∏–º –≤ —Å–µ–∫—É–Ω–¥—ã
        delay_ms = config_manager.get('min_request_delay_ms', 0)
        request_delay_sec = delay_ms / 1000.0
        logger.info(f"–ó–∞–¥–µ—Ä–∂–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤: {delay_ms}ms ({request_delay_sec}s)")

        # --- –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —á–µ—Ä–µ–∑ —Ñ–∞–±—Ä–∏–∫–∏ ---
        logger.info("–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤...")
        proxy_provider_config = config_manager.get('proxy_provider')
        logger.info(f"proxy_provider_config: {proxy_provider_config}")
        
        proxy_provider = create_instance_from_config(proxy_provider_config)
        proxy = proxy_provider.get_proxy(account_name)
        logger.info(f"–ü—Ä–æ–∫—Å–∏ –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–∞: {proxy}")
        
        storage_config = config_manager.get('cookie_storage')
        logger.info(f"storage_config: {storage_config}")
        storage_instance = create_instance_from_config(storage_config)

        # --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ ---
        cookie_manager = initialize_cookie_manager(
            username=username,
            password=password,
            mafile_path=mafile_path,
            steam_id=steam_id,
            storage=storage_instance,
            accounts_dir=accounts_dir,
            proxy=proxy,
            request_delay_sec=request_delay_sec
        )
        
        trade_manager = TradeConfirmationManager(
            username=username,
            mafile_path=mafile_path,
            cookie_manager=cookie_manager,
            api_key=api_key  # –ü–µ—Ä–µ–¥–∞–µ–º API –∫–ª—é—á –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
        )
        
        formatter = DisplayFormatter()
        cookie_checker = CookieChecker(cookie_manager, formatter)

        logger.success(f"‚úÖ –ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è '{account_name}' (user: {username}) —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω.")
        return AccountContext(
            account_name=account_name,
            username=username,
            cookie_manager=cookie_manager,
            trade_manager=trade_manager,
            cookie_checker=cookie_checker,
            accounts_dir=accounts_dir,
            config_manager=config_manager
        )

    except Exception as e:
        logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è '{account_name}': {e}", exc_info=True)
        return None 