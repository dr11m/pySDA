#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã –∫–æ–Ω—Ç—Ä–æ–ª—è –æ—à–∏–±–æ–∫ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
–ò–º–∏—Ç–∏—Ä—É–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ —Ä–∞–±–æ—Ç—ã —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏
"""

import time
import random
from typing import Dict, List
from src.cli.multi_account_auto_manager import AccountErrorTracker
from src.cli.config_manager import ConfigManager
from src.factories import create_instance_from_config


class MockSteamError(Exception):
    """–ò–º–∏—Ç–∞—Ü–∏—è –æ—à–∏–±–∫–∏ Steam API"""
    pass


class MockNetworkError(Exception):
    """–ò–º–∏—Ç–∞—Ü–∏—è —Å–µ—Ç–µ–≤–æ–π –æ—à–∏–±–∫–∏"""
    pass


class MockAuthError(Exception):
    """–ò–º–∏—Ç–∞—Ü–∏—è –æ—à–∏–±–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
    pass


class MockAccountSimulator:
    """–°–∏–º—É–ª—è—Ç–æ—Ä —Ä–∞–±–æ—Ç—ã —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏ Steam"""
    
    def __init__(self, account_name: str):
        self.account_name = account_name
        self.success_rate = random.uniform(0.7, 0.95)  # 70-95% —É—Å–ø–µ—à–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
        self.error_types = [
            ("–°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞", MockNetworkError, 0.3),
            ("–û—à–∏–±–∫–∞ Steam API", MockSteamError, 0.4),
            ("–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏", MockAuthError, 0.3)
        ]
    
    def simulate_operation(self) -> bool:
        """–°–∏–º—É–ª–∏—Ä—É–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏—é —Å –∞–∫–∫–∞—É–Ω—Ç–æ–º"""
        if random.random() < self.success_rate:
            return True
        
        # –í—ã–±–∏—Ä–∞–µ–º —Ç–∏–ø –æ—à–∏–±–∫–∏
        error_name, error_class, weight = random.choices(
            self.error_types, 
            weights=[w for _, _, w in self.error_types]
        )[0]
        
        raise error_class(f"[{self.account_name}] {error_name}")


def get_notification_provider_from_config() -> object:
    """–ü–æ–ª—É—á–∞–µ—Ç –ø—Ä–æ–≤–∞–π–¥–µ—Ä —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ñ–∏–≥–∞"""
    try:
        config = ConfigManager()
        config.load_config()  # –Ø–≤–Ω–æ –∑–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥
        notification_config = config.get('notification_provider')
        
        print(f"üîç –û—Ç–ª–∞–¥–∫–∞: notification_config = {notification_config}")
        
        if notification_config:
            print(f"üîç –û—Ç–ª–∞–¥–∫–∞: –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞...")
            notification_provider = create_instance_from_config(notification_config)
            print(f"‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–æ–≤–∞–π–¥–µ—Ä —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {type(notification_provider).__name__}")
            return notification_provider
        else:
            raise Exception("–ü—Ä–æ–≤–∞–π–¥–µ—Ä —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ –∫–æ–Ω—Ñ–∏–≥–µ")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {e}")
        print("üîÑ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è LoggerNotification –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")
        from src.implementations.notifications.logger_notification import LoggerNotification
        return LoggerNotification()


def demo_realistic_error_tracking():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å –∏–º–∏—Ç–∞—Ü–∏–µ–π —Ä–µ–∞–ª—å–Ω—ã—Ö –æ—à–∏–±–æ–∫"""
    print("üöÄ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –∫–æ–Ω—Ç—Ä–æ–ª—è –æ—à–∏–±–æ–∫ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ —Å—Ü–µ–Ω–∞—Ä–∏—è–º–∏")
    print("=" * 70)
    
    # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
    notification_provider = get_notification_provider_from_config()
    
    # –°–æ–∑–¥–∞–µ–º —Ç—Ä–µ–∫–µ—Ä –æ—à–∏–±–æ–∫
    tracker = AccountErrorTracker(max_errors=3, notification_provider=notification_provider)
    
    print(f"üìä –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—à–∏–±–æ–∫: {tracker.max_errors}")
    print(f"üîî –ü—Ä–æ–≤–∞–π–¥–µ—Ä —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {type(notification_provider).__name__}")
    print()
    
    # –°–æ–∑–¥–∞–µ–º —Å–∏–º—É–ª—è—Ç–æ—Ä—ã –∞–∫–∫–∞—É–Ω—Ç–æ–≤ —Å —Ä–∞–∑–Ω—ã–º–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏
    accounts = {
        "steam_account_1": MockAccountSimulator("steam_account_1"),  # –ù–∞–¥–µ–∂–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç
        "steam_account_2": MockAccountSimulator("steam_account_2"),  # –ü—Ä–æ–±–ª–µ–º–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç
        "steam_account_3": MockAccountSimulator("steam_account_3"),  # –°—Ä–µ–¥–Ω–∏–π –∞–∫–∫–∞—É–Ω—Ç
        "steam_account_4": MockAccountSimulator("steam_account_4"),  # –û—á–µ–Ω—å –ø—Ä–æ–±–ª–µ–º–Ω—ã–π
    }
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–∞–∑–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–æ–≤
    accounts["steam_account_1"].success_rate = 0.95  # 95% —É—Å–ø–µ—Ö–∞
    accounts["steam_account_2"].success_rate = 0.75  # 75% —É—Å–ø–µ—Ö–∞
    accounts["steam_account_3"].success_rate = 0.85  # 85% —É—Å–ø–µ—Ö–∞
    accounts["steam_account_4"].success_rate = 0.60  # 60% —É—Å–ø–µ—Ö–∞ - –æ—á–µ–Ω—å –ø—Ä–æ–±–ª–µ–º–Ω—ã–π
    
    print("üîÑ –°–∏–º—É–ª—è—Ü–∏—è —Ä–∞–±–æ—Ç—ã –∞–∫–∫–∞—É–Ω—Ç–æ–≤ Steam...")
    print()
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ü–∏–∫–ª–æ–≤ —Ä–∞–±–æ—Ç—ã
    for cycle in range(1, 15):
        print(f"üîÑ –¶–∏–∫–ª {cycle}/5:")
        
        for account_name, simulator in accounts.items():
            if tracker.is_account_disabled(account_name):
                print(f"  ‚è∏Ô∏è  [{account_name}] –ü—Ä–æ–ø—É—Å–∫ - –∞–∫–∫–∞—É–Ω—Ç –æ—Ç–∫–ª—é—á–µ–Ω")
                continue
            
            try:
                # –°–∏–º—É–ª–∏—Ä—É–µ–º –æ–ø–µ—Ä–∞—Ü–∏—é
                success = simulator.simulate_operation()
                
                if success:
                    tracker.record_success(account_name)
                    print(f"  ‚úÖ [{account_name}] –û–ø–µ—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞")
                else:
                    # –ù–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–æ–∏–∑–æ–π—Ç–∏, –Ω–æ –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
                    tracker.record_error(account_name)
                    print(f"  ‚ùå [{account_name}] –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞")
                    
            except MockNetworkError as e:
                tracker.record_error(account_name)
                print(f"  üåê [{account_name}] –°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞: {e}")
                
            except MockSteamError as e:
                tracker.record_error(account_name)
                print(f"  üéÆ [{account_name}] –û—à–∏–±–∫–∞ Steam API: {e}")
                
            except MockAuthError as e:
                tracker.record_error(account_name)
                print(f"  üîê [{account_name}] –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {e}")
        
        print()
        time.sleep(1)  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Ü–∏–∫–ª–∞–º–∏
    
    print("=" * 70)
    print("üìä –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    
    # –í—ã–≤–æ–¥–∏–º –¥–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    summary = tracker.get_status_summary()
    print(f"  –í—Å–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤: {summary['total_accounts']}")
    print(f"  –û—Ç–∫–ª—é—á–µ–Ω–æ: {summary['disabled_accounts']}")
    print(f"  –° –æ—à–∏–±–∫–∞–º–∏: {summary['accounts_with_errors']}")
    
    print("\n  –î–µ—Ç–∞–ª–∏ –ø–æ –∞–∫–∫–∞—É–Ω—Ç–∞–º:")
    for account, count in summary['error_counts'].items():
        status = "‚ùå –û—Ç–∫–ª—é—á–µ–Ω" if account in summary['disabled_list'] else "‚úÖ –ê–∫—Ç–∏–≤–µ–Ω"
        success_rate = accounts[account].success_rate * 100
        print(f"    {account}: {count} –æ—à–∏–±–æ–∫ - {status} (—É—Å–ø–µ—Ö: {success_rate:.0f}%)")
    
    if summary['disabled_list']:
        print(f"\n  üö´ –û—Ç–∫–ª—é—á–µ–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã: {', '.join(summary['disabled_list'])}")
    
    print("\n" + "=" * 70)
    print("üîÑ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–æ–≤:")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
    disabled_accounts = summary['disabled_list']
    if disabled_accounts:
        account_to_restore = disabled_accounts[0]
        print(f"  üîß –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–∫–∫–∞—É–Ω—Ç {account_to_restore}...")
        tracker.reset_account_errors(account_to_restore)
        print(f"  ‚úÖ {account_to_restore} —Å–Ω–æ–≤–∞ –∞–∫—Ç–∏–≤–µ–Ω")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        summary = tracker.get_status_summary()
        print(f"  üìä –û—Ç–∫–ª—é—á–µ–Ω–æ –ø–æ—Å–ª–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è: {summary['disabled_accounts']}")
    else:
        print("  ‚úÖ –í—Å–µ –∞–∫–∫–∞—É–Ω—Ç—ã –∞–∫—Ç–∏–≤–Ω—ã, –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è")
    
    print("\nüèÅ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")



if __name__ == '__main__':
    demo_realistic_error_tracking()
